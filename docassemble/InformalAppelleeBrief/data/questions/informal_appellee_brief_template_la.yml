---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALAnyState:any_state.yml
  - docassemble.MassAccess:massaccess.yml
  - docassemble.MassAppealsCourt:appeals-basic-questions.yml
  - docassemble.AffidavitofIndigencyMAVC:affidavit_body.yml
---
metadata:
  title: >-
    Informal Appellee Brief
  short title: >-
    Informal Appellee Brief
  description: |-
    This interview helps someone in Massachusetts complete their Informal Appellee Brief.
  tags:
    - "CO-03-00-00-00"
  authors:
    - Suffolk University LIT Clinic
  original_form:
    - https://www.mass.gov/info-details/appeals-court-informal-brief-pilot-program
  allowed_courts: 
    - "Appeals Court"
  typical_role: "defendant"
  al_weaver_version: "1.10.2"
  generated_on: "2023-11-01"
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-InformalAppelleeBriefTemplateLa'
---
code: |
  interview_short_title = "Complete your Informal Appellee Brief"
---
code: |
  al_form_type = "appeal" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True, complete_attribute = ["name.first", "pronouns", "address.address"])
  - other_parties: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_informal_appellee_brief_template_la: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_informal_appellee_brief_template_la
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Appeals Court']
  nav.set_section("review_informal_appellee_brief_template_la")
  user_ask_role 
  users.gather()
  set_parts(subtitle=str(users))
  users[0].pronouns
  users[0].address.address
  set_progress(14)
  users[0].email
  docket_number
  trial_court
  set_progress(28)
  other_parties.there_are_any = True
  plaintiffs.gather()
  defendants.gather()
  other_parties.gather()
  
  if other_party_has_attorney:
    other_parties[0].attorneys.there_are_any = True
    other_parties[0].attorneys.gather(complete_attribute = "gathered_everything")
  else:
    other_parties[0].address.address
    other_parties[0].email
  
  information
  issues
  set_progress(42)
  case_history
  statement_of_facts
  argument
  set_progress(56)
  conclusion
  set_progress(70)
  method_of_service
  how_to_serve
  service_date
  
  interview_order_informal_appellee_brief_template_la = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  informal_appellee_brief_template_la_intro
  informal_overview
  interview_order_informal_appellee_brief_template_la
  signature_date
  users[0].signature
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  informal_appellee_brief_template_la_download
---
comment: |
  This question is used to introduce your interview. Please customize
id: Informal_Appellee_Brief
continue button field: informal_appellee_brief_template_la_intro
question: |
  Informal Appellee Brief
subquestion: |
  This interview will help you complete your **Informal Appellee Brief.** Please wait to make any changes until the end of the interview! **Please use the "Review your answers" button to go back to previous screens. If you use the "undo" button while completing your interview, all work on later pages will be lost.**
  
  Before you get started, please gather all documents from your lower court case proceedings, and any documents from this appeals court case up to this point.
  
  Most people take about _______ minutes to finish this interview.
---
id: informal overview
continue button field: informal_overview
question: |
  The Informal Brief Pilot Program
subquestion: |
  The Appeals Court launched this program to allow self-represented ("pro se") parties file an “informal” brief instead of a formal brief that strictly complies with the Massachusetts Rules of Appellate Procedure, which is what the Appeals Court typically requires.
  
  This program is only for cases entered on the court’s “panel” docket, for decision by a panel of Justices.
  
  This program does not apply in the single justice session of the Appeals Court, or to attorneys, whether they are representing themselves or responding to an informal brief.
  
  An informal brief is different from a formal brief in that it does not need a table of contents, table of authorities, corporate disclosure statement, summary of argument, or addendum, or need to comply with the standard rules regarding margins, font, and the certificate of compliance.  An informal brief does, however, still need to comply with the rules about impounded and confidential information.
  
  Feel free to read more about this program before proceeding: https://www.mass.gov/info-details/appeals-court-informal-brief-pilot-program/
---
id: Brief Information
continue button field: information
question: Writing Your Appellee Brief
subquestion: |
  In the next 5 sections you will write the content of your brief. Please enter only the information that is requested in each section. 
  You will be able to review your brief at the end. **Once you begin writing, do not press the "Undo" button, as this will delete your progress. Use the "Review your answers" button in the top left to edit previous sections instead.**
mandatory: True
---
id: Your Earlier Case
question: |
  Select the **Trial Court** department and division where your case was heard.
fields:
  - no label: trial_court
    datatype: object
    choices: macourts.filter_courts(["Boston Municipal Court",
      "District Court",
      "Superior Court",
      "Housing Court",
      "Probate and Family Court",
      "Juvenile Court",
      "Land Court"])
---
id: Docket Number
question: |
  What is the **Appeals Court** docket number for your case?
subquestion: |
  This docket number is different from your Trial Court docket number. You can find your Appeals Court docket number on the **Notice of Entry** you should have received when this case was first appealed.
fields: 
  - Docket number: docket_number
    hint: e.g., 1234-P-1234
  - note: |
      The format of your docket number should be: ####-P-####
---
id: user role
question: |
  Did you file the first forms in this case in the lower court, or did you respond to a case
  that someone else started?
fields: 
  - no label: user_ask_role
    datatype: radio
    choices:
      - Started a new case in the lower court: plaintiff
      - Responded to a case in the lower court: defendant
  - note: |
      Okay, you were the **Plaintiff** or Petitioner your lower court case. The other 
      side was the **Defendant** or Respondent.
    show if:
      variable: user_ask_role
      is: "plaintiff"
  - note: |
      Okay, you were the **Defendant** or Respondent in your lower court case. The other 
      side was the **Plaintiff** or Petitioner.
    show if:
      variable: user_ask_role
      is: "defendant"
help:
  label: |
    How do I know?
  content: |
    We need to know if you were the "Plaintiff" or the "Defendant" in your
    lower court case.
    
    If you were the first person to file a form in the case, you were the
    "Plaintiff" or the "Petitioner."
  
    If you were responding to a case or court papers someone else filed, you were
    the "Defendant" or the "Respondent."
---
id: names of opposing parties
question: |
  % if users==plaintiffs:
  Please list the name of each **defendant** or respondent from 
  your lower case below
  % else:
  Please list the name of each **plaintiff** or petitioner from 
  your lower case below
  % endif
subquestion: |
  Click "${word("Add another")}" to add more.
list collect: 
  enable: True
  label: |
    % if users==plaintiffs:
    Defendant/Respondent ${i+1}    
    % else:
    Plaintiff/Petitioner ${i+1}
    % endif
fields:
  - Is this a person, or a business?: other_parties[i].person_type
    input type: radio
    choices:
      - Business or organization: business
      - Person: individual
  - First name: other_parties[i].name.first
    show if:
      variable: other_parties[i].person_type
      is: "individual"
  - Last name: other_parties[i].name.last
    show if:
      variable: other_parties[i].person_type      
      is: "individual"
  - Suffix: other_parties[i].name.suffix
    code: |
      name_suffix()
    show if:
      variable: other_parties[i].person_type      
      is: "individual"
    required: False      
  - Name of organization or business: other_parties[i].name.first
    show if:
      variable: other_parties[i].person_type
      is: business
---
id: Issues on Appeal
question: |
  Issues on Appeal
subquestion: |
  List the issue or issues you are raising in this appeal and will discuss in your argument section.  It is your obligation to find out if any information in your case is impounded or confidential; for more information, please go to section (c) (4) of the Informal Brief Guidance.
fields:
  - "Issues": issues
    input type: area
    rows: 10
---
id: Case History
question: |
  Case History
subquestion: |
  Identify when this case began in the trial court or agency, each order or decision that you are challenging as incorrect, the name of the judge who issued each challenged order or decision, and the date when each notice of appeal was filed.  Include references to the page(s) in the record appendix where each order or decision and each notice of appeal are located.
fields:
  - "Case History": case_history
    input type: area
    rows: 15
---
id: Statement of Facts
question: |
  Statement of Facts
subquestion: |
  Provide a statement of the facts that are related to the issues you are appealing.  Each statement of fact must be followed by a reference to the specific page or pages in the record appendix or transcript(s) where that fact is found (Examples -– "Apx at 25"; "Transcript 10/15/22 at pg 55"; "Exhibit #2 at pg 95").  You may not include facts that were not brought to the attention of the trial judge or agency, and you may not cite generally to an entire document by its title or exhibit number without referring to specific page(s) of that document unless the document or exhibit is a single page.  Do not refer to any party or individual by name if their identity has been impounded by statute, court rule, or court order.  See Section (c) (4) of the Informal Brief Guidance for more information about impoundment and confidentiality.
fields:
  - "Statement of Facts": statement_of_facts
    input type: area
    rows: 20
---
id: Argument
question: |
  Argument
subquestion: |
  Present your reasons why the trial court or agency was wrong as a matter of law or fact, and why the Appeals Court should rule in your favor.  Your argument must be supported with citations to legal authorities such as case decisions (preferably from Massachusetts), statutes, regulations, court rules, constitutional provisions, or other authorities.  When discussing facts again in this section, you must again include a reference to the specific page or pages in your record appendix or transcript(s) where support for that fact can be found.
fields:
  - "Argument": argument
    input type: area
    rows: 20
---
id: Conclusion
question: |
  Conclusion
subquestion: |
  A statement of what you are asking the Appeals Court to do (for example, order a new trial, enter judgment for you, modify the trial court judgment, etc.).
fields:
  - "Conclusion": conclusion
    input type: area
    rows: 10
---
id: method of service
question: |
  % if other_party_has_attorney: 
  
  **How** will you deliver the required copies of the motion, memorandum, and supporting materials to **${ other_parties[0].attorneys }**?
  
  % else:
  
  **How** will you deliver the required copies of the motion, memorandum, and supporting materials to **${ other_parties }**?
  
  % endif
subquestion: |
  % if other_party_has_attorney: 
  
  You are required to provide a copy of this motion, memorandum, and supporting materials to **${ other_parties[0].attorneys }**.
  
  % else:
  
  Since **${ other_parties }'s** does not have an attorney, you are required to serve **${ other_parties }** with a copy of this motion, memorandum, and supporting materials.  
  
  % endif
  
  You should **not** provide a copy of your Affidavit of Indigency, if any, to anyone except the Appeals Court.  
fields: 
  - Method of Service: method_of_service
    choices: 
      - Efile and serve (efilema.com): efile and serve (efilema.com)
      - Email: email
      - Mail: mail
      - Hand delivery: hand delivery
---
id: how to serve
continue button field: how_to_serve
question: |
  % if method_of_service == 'efile and serve (efilema.com)':
      Efiling
  % elif method_of_service == 'email':
      Email
  % elif method_of_service == 'mail':
      Mail
  % else: 
      Hand Delivery
  % endif
subquestion: |
  % if method_of_service == 'efile and serve (efilema.com)':
      To efile your documents, open this [link](https://massachusetts.tylertech.cloud/OfsWeb) now, and return to it when you complete this interview to complete the efiling.
  % elif method_of_service == 'email':
      To email your documents, download all documents at the end of this interview and use your personal email to deliver them to ${ other_parties } at ${ other_parties[0].email }
  % elif method_of_service == 'mail':
      To mail your documents, download and print all documents at the end of this interview and mail them to ${ other_parties } at ${ other_parties[0].address.address }
  % else: 
      To hand deliver your documents, download and print all documents at the end of this interview and deliver them to ${ other_parties } at ${ other_parties[0].address.address }
  % endif
mandatory: True
---
objects:
  - attorneys: ALPeopleList.using(there_are_any=True)
  - other_parties[i].attorneys: PeopleList
---
id: other parties attorney trigger
question: |
  Does **${ other_parties }** have an attorney?
yesno: other_party_has_attorney
---
generic object: ALIndividual
code: |
  x.name.first
  x.address.address
  x.email
  x.gathered_everthing = True
---
id: other parties another attorney
question: |
  Does **${ other_parties }** have another attorney?
yesno: other_parties[i].attorneys.there_is_another
---
id: other parties attorney name
sets:
  - other_parties[i].attorneys[j].name.first
  - other_parties[i].attorneys[j].name.last
generic object: ALIndividual
question: |
  What is **${ other_parties[i] }'s** attorney's name?
fields:
  - code: |
     other_parties[i].attorneys[j].name_fields()
---
id: other parties attorney address
generic object: ALIndividual
sets:
  - other_parties[i].attorneys[j].address.address
  - other_parties[i].attorneys[j].address.city
  - other_parties[i].attorneys[j].address.zip
question: |
  What is **${ other_parties[i].attorneys[j] }'s** address?
fields:
  - code: |
      other_parties[i].attorneys[j].address_fields()
---
id: other parties attorney email
generic object: ALIndividual
question: |
  What is **${ other_parties[i].attorneys[j] }'s** email address?
fields:
  - Email: other_parties[i].attorneys[j].email
    datatype: email
---
id: service date
question: |
  % if other_party_has_attorney: 
  
  **When** will you deliver the required copies of the motion, memorandum, and supporting materials to **${ other_parties[0].attorneys }**?
  
  % else:
  
  **When** will you deliver the required copies of the motion, memorandum, and supporting materials to **${ other_parties }**?
  
  % endif
subquestion: |
  % if other_party_has_attorney: 
  
  You are required to provide a copy of this motion, memorandum, and supporting materials to **${ other_parties[0].attorneys }**.
  
  % else:
  
  Since **${ other_parties }'s** does not have an attorney, you are required to serve **${ other_parties }** with a copy of this motion, memorandum, and supporting materials.  
  
  % endif
fields:
  - Date: service_date
    datatype: date
    min: ${ today() }
---
id: Certificate of Service
question: |
  Certificate of Service
subquestion: |
  The Date of Service is the date on which this brief is delivered to the opposing parties. For more detailed information on certificates of service in the Appeals Court, see: https://www.mass.gov/rules-of-appellate-procedure/appellate-procedure-rule-13-filing-and-service
fields:
  - "Date of Service": service_date
    datatype: date
  - "Today's Date": full_date
    datatype: date
---
id: preview informal_appellee_brief_template_la
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_informal_appellee_brief_template_la'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: informal_appellee_brief_template_la_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: informal appellee brief template la review screen
event: review_informal_appellee_brief_template_la
question: |
  Review your answers
review:
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: conclusion
    button: |
      **Conclusion**:
      ${ conclusion }
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: issues
    button: |
      **Issues**:
      ${ issues }
  - Edit: case_history
    button: |
      **Case History**:
      ${ case_history }
  - Edit: other_parties.revisit
    button: |
      **Other parties**

      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: statement_of_facts
    button: |
      **Statement of Facts**:
      ${ statement_of_facts }
  - Edit: service_date
    button: |
      **Date of Service**:
      ${ service_date }
  - Edit: full_date
    button: |
      **Today's Date**:
      ${ full_date }
  - Edit: argument
    button: |
      **Argument**:
      ${ argument }
  - Edit: trial_court
    button: |
      **Lower Court Name**:
      ${ trial_court }
---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Pronouns: |
      row_item.pronouns if defined("row_item.pronouns") else ""
edit:
  - signature
  - address.address
  - email
  - name.first
  - person.pronoun_fields(show_help=True)
confirm: True

---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - address.address
  - name.first
confirm: True

---
id: download informal_appellee_brief_template_la
event: informal_appellee_brief_template_la_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_informal_appellee_brief_template_la'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - informal_appellee_brief_template_la_Post_interview_instructions: ALDocument.using(title="Instructions", filename="informal_appellee_brief_template_la_next_steps.docx", enabled=True, has_addendum=False)
  - informal_appellee_brief_template_la_attachment: ALDocument.using(title="Informal Appellee Brief", filename="informal_appellee_brief_template_la", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[informal_appellee_brief_template_la_Post_interview_instructions, informal_appellee_brief_template_la_attachment], filename="informal_appellee_brief_template_la", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[informal_appellee_brief_template_la_attachment],  filename="informal_appellee_brief_template_la", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: informal_appellee_brief_template_la_next_steps
  docx template file: informal_appellee_brief_template_la_next_steps.docx
  variable name: informal_appellee_brief_template_la_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: informal appellee brief template la
  filename: informal_appellee_brief_template_la
  variable name: informal_appellee_brief_template_la_attachment[i]
  skip undefined: True
  docx template file: informal_appellee_brief_template_la.docx
  tagged pdf: True
---
# attachment: 
  # name: 
  # filename: 
  # variable name: 
  # skip undefined: True
  # docx template file: 
  # tagged pdf: True



